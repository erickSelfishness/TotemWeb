<?php

/**
 * This is the model base class for the table "question".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Question".
 *
 * Columns in table "question" available as properties of the model,
 * followed by relations of table "question" available as properties of the model.
 *
 * @property string $id
 * @property string $test_id
 * @property string $number
 * @property string $text
 * @property string $question_type
 *
 * @property Test $test
 * @property UserTestAnswer[] $userTestAnswers
 */
abstract class BaseQuestion extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'question';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Question|Questions', $n);
	}

	public static function representingColumn() {
		return 'text';
	}

	public function rules() {
		return array(
			array('test_id, number, text, question_type', 'required'),
			array('test_id, number, question_type', 'length', 'max'=>10),
			array('text', 'length', 'max'=>255),
			array('id, test_id, number, text, question_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'test' => array(self::BELONGS_TO, 'Test', 'test_id'),
			'userTestAnswers' => array(self::HAS_MANY, 'UserTestAnswer', 'question_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'test_id' => null,
			'number' => Yii::t('app', 'Number'),
			'text' => Yii::t('app', 'Text'),
			'question_type' => Yii::t('app', 'Question Type'),
			'test' => null,
			'userTestAnswers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('test_id', $this->test_id);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('question_type', $this->question_type, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}