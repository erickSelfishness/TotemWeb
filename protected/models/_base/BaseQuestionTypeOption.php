<?php

/**
 * This is the model base class for the table "question_type_option".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "QuestionTypeOption".
 *
 * Columns in table "question_type_option" available as properties of the model,
 * followed by relations of table "question_type_option" available as properties of the model.
 *
 * @property string $id
 * @property string $question_type_id
 * @property string $value
 * @property string $text
 *
 * @property QuestionType $questionType
 * @property UserTestAnswer[] $userTestAnswers
 */
abstract class BaseQuestionTypeOption extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'question_type_option';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'QuestionTypeOption|QuestionTypeOptions', $n);
	}

	public static function representingColumn() {
		return 'text';
	}

	public function rules() {
		return array(
			array('question_type_id, value, text', 'required'),
			array('question_type_id, value', 'length', 'max'=>10),
			array('text', 'length', 'max'=>255),
			array('id, question_type_id, value, text', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'questionType' => array(self::BELONGS_TO, 'QuestionType', 'question_type_id'),
			'userTestAnswers' => array(self::HAS_MANY, 'UserTestAnswer', 'question_type_option_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'question_type_id' => null,
			'value' => Yii::t('app', 'Value'),
			'text' => Yii::t('app', 'Text'),
			'questionType' => null,
			'userTestAnswers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('question_type_id', $this->question_type_id);
		$criteria->compare('value', $this->value, true);
		$criteria->compare('text', $this->text, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}