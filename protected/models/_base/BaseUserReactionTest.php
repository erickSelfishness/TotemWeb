<?php

/**
 * This is the model base class for the table "user_reaction_test".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserReactionTest".
 *
 * Columns in table "user_reaction_test" available as properties of the model,
 * followed by relations of table "user_reaction_test" available as properties of the model.
 *
 * @property string $id
 * @property string $user_test_id
 * @property string $sleep_hours
 * @property string $awake_hours
 * @property string $time_now
 * @property string $alert_level
 * @property string $invalid_count
 * @property string $missed_count
 * @property string $crash_count
 *
 * @property UserTest $userTest
 * @property UserReactionTestMeasurement[] $userReactionTestMeasurements
 */
abstract class BaseUserReactionTest extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_reaction_test';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserReactionTest|UserReactionTests', $n);
	}

	public static function representingColumn() {
		return 'time_now';
	}

	public function rules() {
		return array(
			array('user_test_id, sleep_hours, awake_hours, time_now, alert_level, invalid_count, missed_count, crash_count', 'required'),
			array('user_test_id, sleep_hours, awake_hours, time_now, alert_level, invalid_count, missed_count, crash_count', 'length', 'max'=>10),
			array('id, user_test_id, sleep_hours, awake_hours, time_now, alert_level, invalid_count, missed_count, crash_count', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'userTest' => array(self::BELONGS_TO, 'UserTest', 'user_test_id'),
			'userReactionTestMeasurements' => array(self::HAS_MANY, 'UserReactionTestMeasurement', 'user_reaction_test_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_test_id' => null,
			'sleep_hours' => Yii::t('app', 'Sleep Hours'),
			'awake_hours' => Yii::t('app', 'Awake Hours'),
			'time_now' => Yii::t('app', 'Time Now'),
			'alert_level' => Yii::t('app', 'Alert Level'),
			'invalid_count' => Yii::t('app', 'Invalid Count'),
			'missed_count' => Yii::t('app', 'Missed Count'),
			'crash_count' => Yii::t('app', 'Crash Count'),
			'userTest' => null,
			'userReactionTestMeasurements' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_test_id', $this->user_test_id);
		$criteria->compare('sleep_hours', $this->sleep_hours, true);
		$criteria->compare('awake_hours', $this->awake_hours, true);
		$criteria->compare('time_now', $this->time_now, true);
		$criteria->compare('alert_level', $this->alert_level, true);
		$criteria->compare('invalid_count', $this->invalid_count, true);
		$criteria->compare('missed_count', $this->missed_count, true);
		$criteria->compare('crash_count', $this->crash_count, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}