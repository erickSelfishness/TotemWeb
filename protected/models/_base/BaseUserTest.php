<?php

/**
 * This is the model base class for the table "user_test".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserTest".
 *
 * Columns in table "user_test" available as properties of the model,
 * followed by relations of table "user_test" available as properties of the model.
 *
 * @property string $id
 * @property integer $user_id
 * @property string $test_id
 * @property string $date_taken
 * @property string $score
 * @property integer $gender
 * @property string $height
 * @property string $weight
 * @property integer $age
 * @property integer $marital_status
 * @property string $occupation
 * @property string $occupation_area
 * @property integer $activity_level
 * @property string $working_days_sleep_hours
 * @property string $working_days_sleep_hours_desired
 * @property string $working_days_sleep_quality
 * @property string $weekend_sleep_hours
 * @property string $weekend_sleep_hours_desired
 * @property integer $weekend_sleep_quality
 * @property string $working_hours
 * @property string $exercise_hours
 * @property string $recreation_hours
 * @property string $travel_hours
 *
 * @property UserReactionTest[] $userReactionTests
 * @property User $user
 * @property Test $test
 * @property UserTestAnswer[] $userTestAnswers
 */
abstract class BaseUserTest extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_test';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserTest|UserTests', $n);
	}

	public static function representingColumn() {
		return 'date_taken';
	}
    
    public function rules() {
        return array(
            array('user_id, test_id, date_taken, score', 'required'),
            array('user_id, gender, age, marital_status, activity_level, weekend_sleep_quality', 'numerical', 'integerOnly'=>true),
            array('test_id, score, height, weight, working_days_sleep_hours, working_days_sleep_hours_desired, working_days_sleep_quality, weekend_sleep_hours, weekend_sleep_hours_desired, working_hours, exercise_hours, recreation_hours, travel_hours', 'length', 'max'=>10),
            array('occupation, occupation_area', 'length', 'max'=>255),
            array('gender, height, weight, age, marital_status, occupation, occupation_area, activity_level, working_days_sleep_hours, working_days_sleep_hours_desired, working_days_sleep_quality, weekend_sleep_hours, weekend_sleep_hours_desired, weekend_sleep_quality, working_hours, exercise_hours, recreation_hours, travel_hours', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, user_id, test_id, date_taken, score, gender, height, weight, age, marital_status, occupation, occupation_area, activity_level, working_days_sleep_hours, working_days_sleep_hours_desired, working_days_sleep_quality, weekend_sleep_hours, weekend_sleep_hours_desired, weekend_sleep_quality, working_hours, exercise_hours, recreation_hours, travel_hours', 'safe', 'on'=>'search'),
        );
    }    

	public function relations() {
		return array(
			'userReactionTests' => array(self::HAS_MANY, 'UserReactionTest', 'user_test_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'test' => array(self::BELONGS_TO, 'Test', 'test_id'),
			'userTestAnswers' => array(self::HAS_MANY, 'UserTestAnswer', 'user_test_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'test_id' => Yii::t('app', 'Test'),
			'date_taken' => Yii::t('app', 'Date Taken'),
			'score' => Yii::t('app', 'Score'),
            'gender' => Yii::t('app', 'Gender'),
            'height' => Yii::t('app', 'Height'),
            'weight' => Yii::t('app', 'Weight'),
            'age' => Yii::t('app', 'Age'),
            'marital_status' => Yii::t('app', 'Marital Status'),
            'occupation' => Yii::t('app', 'Occupation'),
            'occupation_area' => Yii::t('app', 'Occupation Area'),
            'activity_level' => Yii::t('app', 'Activity Level'),
            'working_days_sleep_hours' => Yii::t('app', 'Working Days Sleep Hours'),
            'working_days_sleep_hours_desired' => Yii::t('app', 'Working Days Sleep Hours Desired'),
            'working_days_sleep_quality' => Yii::t('app', 'Working Days Sleep Quality'),
            'weekend_sleep_hours' => Yii::t('app', 'Weekend Sleep Hours'),
            'weekend_sleep_hours_desired' => Yii::t('app', 'Weekend Sleep Hours Desired'),
            'weekend_sleep_quality' => Yii::t('app', 'Weekend Sleep Quality'),
            'working_hours' => Yii::t('app', 'Working Hours'),
            'exercise_hours' => Yii::t('app', 'Exercise Hours'),
            'recreation_hours' => Yii::t('app', 'Recreation Hours'),
            'travel_hours' => Yii::t('app', 'Travel Hours'),			
			'userReactionTests' => null,
			'user' => null,
			'test' => null,
			'userTestAnswers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('test_id', $this->test_id);
		$criteria->compare('date_taken', $this->date_taken, true);
		$criteria->compare('score', $this->score, true);
        $criteria->compare('gender', $this->gender);
        $criteria->compare('height', $this->height, true);
        $criteria->compare('weight', $this->weight, true);
        $criteria->compare('age', $this->age);
        $criteria->compare('marital_status', $this->marital_status);
        $criteria->compare('occupation', $this->occupation, true);
        $criteria->compare('occupation_area', $this->occupation_area, true);
        $criteria->compare('activity_level', $this->activity_level);
        $criteria->compare('working_days_sleep_hours', $this->working_days_sleep_hours, true);
        $criteria->compare('working_days_sleep_hours_desired', $this->working_days_sleep_hours_desired, true);
        $criteria->compare('working_days_sleep_quality', $this->working_days_sleep_quality, true);
        $criteria->compare('weekend_sleep_hours', $this->weekend_sleep_hours, true);
        $criteria->compare('weekend_sleep_hours_desired', $this->weekend_sleep_hours_desired, true);
        $criteria->compare('weekend_sleep_quality', $this->weekend_sleep_quality);
        $criteria->compare('working_hours', $this->working_hours, true);
        $criteria->compare('exercise_hours', $this->exercise_hours, true);
        $criteria->compare('recreation_hours', $this->recreation_hours, true);
        $criteria->compare('travel_hours', $this->travel_hours, true);
        
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}